export const cov_sort_argv = [
{ crash_loc: 10020, vul_type: "IssueCat-1 Use of uninitialized variable", deb_tool: "Cov" },
{ crash_loc: 8992, vul_type: "IssueCat-1 Use of uninitialized variable", deb_tool: "Cov" },
{ crash_loc: 8299, vul_type: "IssueCat-1 Use of uninitialized variable", deb_tool: "Cov" },
{ crash_loc: "", vul_type: "IssueCat-2 Stack-based buffer overflow", deb_tool: "cov" },
{ crash_loc: 13883, vul_type: "IssueCat-3 Heap-based buffer overflow", deb_tool: "Cov" },
{ crash_loc: "", vul_type: "IssueCat-4 Global buffer overflow", deb_tool: "cov" },
{ crash_loc: 9672, vul_type: "IssueCat-5 Read memory access", deb_tool: "Cov" },
{ crash_loc: 8996, vul_type: "IssueCat-5 Read memory access", deb_tool: "Cov" },
{ crash_loc: 140291203379772, vul_type: "IssueCat-5 Read memory access", deb_tool: "Cov" },
{ crash_loc: 8300, vul_type: "IssueCat-5 Read memory access", deb_tool: "Cov" },
{ crash_loc: 140146943548046, vul_type: "IssueCat-5 Read memory access", deb_tool: "Cov" },
{ crash_loc: 11774, vul_type: "IssueCat-5 Read memory access", deb_tool: "Cov" },
{ crash_loc: 11774, vul_type: "IssueCat-5 Read memory access", deb_tool: "Cov" },
{ crash_loc: 13689, vul_type: "IssueCat-5 Read memory access", deb_tool: "Cov" },
{ crash_loc: 94174482711047, vul_type: "IssueCat-6 Write memory access", deb_tool: "Cov" },
{ crash_loc: 9725, vul_type: "IssueCat-8 Allocation size too big", deb_tool: "Cov" },
{ crash_loc: "UNRECOGNIZED_ERROR", vul_type: "IssueCat-8 Allocation size too big", deb_tool: "Cov" },
{ crash_loc: 9725, vul_type: "IssueCat-10 Requested allocation size exceeds maximum supported size", deb_tool: "Cov" },
{ crash_loc: "UNRECOGNIZED_ERROR", vul_type: "IssueCat-10 Requested allocation size exceeds maximum supported size", deb_tool: "Cov" },
{ crash_loc: "", vul_type: "IssueCat-15 Runtime Error", deb_tool: "cov" },
];